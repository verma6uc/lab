import { Task, TaskBoard, TaskDetails } from './types';

export const mockTaskBoard: TaskBoard = {
  groups: [
    {
      title: 'Blueprint & Structure',
      type: 'blueprint_structure',
      description: 'Define sections, pages, and overall structure',
      tasks: [
        {
          id: 'bp-1',
          title: 'Define User Profile Section',
          status: 'in_progress',
          type: 'define_section',
          category: 'blueprint_structure',
          description: 'Define the user profile section including data display and edit capabilities',
          agent: 'Seldon',
          confidence: 0.95,
          lastUpdated: '2024-03-20T10:30:00Z',
          priority: 'high',
          labels: ['user-profile', 'core'],
          targetEntity: 'User',
        },
        {
          id: 'bp-2',
          title: 'Define Dashboard Page Structure',
          status: 'todo',
          type: 'define_page',
          category: 'blueprint_structure',
          description: 'Determine layout and sections for the main dashboard page',
          agent: 'Fastolfe',
          confidence: 0.92,
          lastUpdated: '2024-03-20T11:30:00Z',
          priority: 'high',
          labels: ['dashboard', 'layout'],
        },
      ],
    },
    {
      title: 'UI & Data Integration',
      type: 'ui_integration',
      description: 'Build and integrate UI components with data',
      tasks: [
        {
          id: 'ui-1',
          title: 'Build User Profile Static UI',
          status: 'todo',
          type: 'build_static_ui',
          category: 'ui_integration',
          description: 'Create the static UI components for user profile display',
          agent: 'Dors',
          confidence: 0.94,
          lastUpdated: '2024-03-20T12:30:00Z',
          priority: 'high',
          labels: ['frontend', 'user-profile'],
          dependencies: ['bp-1'],
        },
        {
          id: 'ui-2',
          title: 'User Profile Data Query',
          status: 'todo',
          type: 'build_sql_json',
          category: 'ui_integration',
          description: 'Implement SQL query to fetch user profile data as JSON',
          agent: 'Daneel',
          confidence: 0.96,
          lastUpdated: '2024-03-20T13:30:00Z',
          priority: 'high',
          labels: ['backend', 'sql'],
          dependencies: ['bp-1'],
        },
      ],
    },
    {
      title: 'Forms, Actions & Effects',
      type: 'forms_actions',
      description: 'Implement forms, actions, and their effects',
      tasks: [
        {
          id: 'form-1',
          title: 'User Profile Form Config',
          status: 'todo',
          type: 'build_form_config',
          category: 'forms_actions',
          description: 'Define form fields and validation rules for user profile',
          agent: 'Amadiro',
          confidence: 0.93,
          lastUpdated: '2024-03-20T14:30:00Z',
          priority: 'medium',
          labels: ['forms', 'validation'],
          dependencies: ['bp-1'],
        },
        {
          id: 'act-1',
          title: 'Profile Update Action',
          status: 'todo',
          type: 'build_action',
          category: 'forms_actions',
          description: 'Implement the backend action to update user profile',
          agent: 'Giskard',
          confidence: 0.95,
          lastUpdated: '2024-03-20T15:30:00Z',
          priority: 'high',
          labels: ['action', 'backend'],
          dependencies: ['form-1'],
        },
      ],
    },
    {
      title: 'Help & Documentation',
      type: 'help_docs',
      description: 'Create help content and documentation',
      tasks: [
        {
          id: 'help-1',
          title: 'User Profile Help Content',
          status: 'todo',
          type: 'write_section_help',
          category: 'help_docs',
          description: 'Write help content for the user profile section',
          agent: 'Baley',
          confidence: 0.91,
          lastUpdated: '2024-03-20T16:30:00Z',
          priority: 'medium',
          labels: ['help', 'user-profile'],
          dependencies: ['bp-1'],
        },
      ],
    },
    {
      title: 'Testing',
      type: 'testing',
      description: 'Create and execute test plans',
      tasks: [
        {
          id: 'test-1',
          title: 'User Profile Test Plan',
          status: 'todo',
          type: 'write_test_plan',
          category: 'testing',
          description: 'Create test plan for user profile functionality',
          agent: 'Calvin',
          confidence: 0.97,
          lastUpdated: '2024-03-20T17:30:00Z',
          priority: 'high',
          labels: ['testing', 'user-profile'],
          dependencies: ['bp-1'],
        },
      ],
    },
    {
      title: 'Optimization',
      type: 'optimization',
      description: 'Performance improvements and optimizations',
      tasks: [
        {
          id: 'opt-1',
          title: 'Profile Query Optimization',
          status: 'todo',
          type: 'optimize_performance',
          category: 'optimization',
          description: 'Optimize user profile data retrieval performance',
          agent: 'Vasilia',
          confidence: 0.94,
          lastUpdated: '2024-03-20T18:30:00Z',
          priority: 'medium',
          labels: ['performance', 'sql'],
          dependencies: ['ui-2'],
        },
      ],
    },
  ],
  statuses: [
    { id: 'todo', label: 'To Do' },
    { id: 'in_progress', label: 'In Progress' },
    { id: 'review', label: 'Review' },
    { id: 'done', label: 'Done' },
  ],
};

export const mockTaskDetails: Record<string, TaskDetails> = {
  'bp-1': {
    ...mockTaskBoard.groups[0].tasks[0],
    history: [
      {
        timestamp: '2024-03-20T10:25:00Z',
        action: 'Started section definition',
        agent: 'Seldon',
        details: 'Analyzing requirements and planning section structure',
        confidence: 0.95,
      },
    ],
    comments: [
      {
        id: 'c1',
        author: 'Fastolfe',
        content: 'Consider adding a activity timeline section',
        timestamp: '2024-03-20T10:26:00Z',
      },
    ],
    attachments: [
      {
        id: 'a1',
        name: 'user-profile-spec.yaml',
        type: 'yaml',
        url: '/attachments/user-profile-spec.yaml',
      },
    ],
    relatedTasks: [
      {
        id: 'ui-1',
        title: 'Build User Profile Static UI',
        type: 'build_static_ui',
        status: 'todo',
      },
      {
        id: 'ui-2',
        title: 'User Profile Data Query',
        type: 'build_sql_json',
        status: 'todo',
      },
    ],
  },
}; 